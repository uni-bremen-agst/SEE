using SEE.Utils;

namespace SEE.DataModel.Runtime.IO
{
    /// <summary>
    /// Generates a call tree out of a DYN-file.
    /// </summary>
    public class CallTreeReader : DYNParser
    {
        /// <summary>
        /// This call tree will be generated by <see cref="DYNParser.Load"/>.
        /// </summary>
        public CallTree CallTree { get; private set; }

        /// <summary>
        /// Constructor.
        /// </summary>
        /// <param name="filename">The file to be parsed.</param>
        /// <param name="logger">The debug logger.</param>
        public CallTreeReader(string filename, ILogger logger = null) : base(filename, logger)
        {
            CallTree = null;
        }

        /// <summary>
        /// Creates a new call tree with given categories.
        /// </summary>
        /// <param name="categories"></param>
        protected override void Categories(string[] categories)
        {
            CallTree = new CallTree(new CallTreeCategories(categories));
        }

        /// <summary>
        /// Appends a function call with given attributes to call tree.
        /// </summary>
        /// <param name="attributes">The attributes of the function call.</param>
        protected override void FunctionCall(string[] attributes)
        {
            CallTreeFunctionCall functionCall = new CallTreeFunctionCall(CallTree.Categories, attributes);
            CallTree.AddFunctionCall(functionCall);
        }
    }
}
